/*
Important to note that we use mm for distances and radians for angles
*/

#include <Arduino.h>
#include <Motor_Drive.h>
#include <Optical_Flow.h>
#include <SPI.h>
#include <math.h>

struct velocities_class {
  float linear_velocity;
  float angular_velocity;
} velocities;

struct motors {
  int left_motor;
  int right_motor;
} motorcontrol;

unsigned long last_print;

void setup() {
  pinMode(PIN_SS_LEFT, OUTPUT);
  pinMode(PIN_SS_RIGHT, OUTPUT);
  pinMode(PIN_MISO, INPUT);
  pinMode(PIN_MOSI, OUTPUT);
  pinMode(PIN_SCK, OUTPUT);

  SPI.begin();
  SPI.setClockDivider(SPI_CLOCK_DIV32);
  SPI.setDataMode(SPI_MODE3);
  SPI.setBitOrder(MSBFIRST);

  robot.begin();

  Serial.begin(9600);

  last_print = millis();

  set_left_optical_cs(true);
  if (mousecam_init() == -1) {
    Serial.println("Left optical flow sensor failed to init");
    while (1)
      ;
  }

  set_left_optical_cs(false);
  if (mousecam_init() == -1) {
    Serial.println("Right optical flow sensor failed to init");
    while (1)
      ;
  }
}

void robot_move(float q_reqd, float p_reqd, float phi_reqd) {}
// contorls velocities
velocities_class outer_loop(float q_reqd, float p_reqd, float phi_reqd) {
  float velocity_reqd = distance_loop;
  float angular_velocity_reqd = theta_loop;

  return velocities;
}
// controls velocities
motors inner_loop(float velocity_reqd, float angular_velocity_reqd) {
  motorcontrol.left_motor = ;
  motorcontrol.right_motor = ;
  return motorcontrol;
}

void loop() {}
